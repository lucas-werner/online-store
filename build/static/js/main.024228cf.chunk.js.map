{"version":3,"sources":["services/api.js","components/AddCartButton.js","components/ProductCard/ProductCard.js","components/ProductList/ProductList.js","components/ShoppingCartSize/ShoppingCartSize.js","pages/ProductListPage/ProductListPage.js","components/ReturnButton.js","components/ProductDetails/ProductDetails.js","pages/ProductDetailsPage/ProductDetailsPage.js","components/RemoveCartButton.js","pages/ShoppingCartPage/ShoppingCartPage.js","components/CheckoutItems.js","components/CheckoutForm.js","pages/CheckoutPage.js","App.js","serviceWorker.js","index.js"],"names":["a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","URL","AddCartButton","props","addToCart","bind","checkQuantity","this","product","updateCart","localStorage","getItem","setItem","JSON","stringify","products","parse","console","log","filter","i","id","quantity","available_quantity","length","datatestid","buttonText","type","onClick","data-testid","Component","Card","title","src","price","details","className","height","alt","shipping","free_shipping","to","ProductList","saveProduct","productId","saveproduct","productsList","find","cartSize","map","card","ProductCard","thumbnail","key","ShoppingCartSize","ProductListPage","size","state","categories","categoryID","handleRadio","handleQueryButton","API","then","setState","name","value","e","htmlFor","event","target","r","results","onChange","renderHeader","categoryList","ReturnButton","icon","faUndo","color","React","ProductDetails","attributes","attribute","value_name","ProductDetailsPage","review","updateState","Object","keys","RemoveCartButton","removeFromCart","reverse1","reverse","index","findIndex","item","splice","reverse2","ShoppingCart","cart","removedItem","Button","removeAllItems","quantityButtons","totalPrice","reduce","acc","cur","Intl","NumberFormat","style","currency","format","filteredProducts","current","createProductInfos","checkoutButton","CheckoutItems","totalPrices","inc","CheckoutForm","fullName","CPF","email","phone","CEP","Address","Complemento","Number","Cidade","Estado","checked","handleChange","PayMethod","handleSubmit","handleDropdown","handleClick","preventDefault","placeholder","required","ele","onSubmit","textblock1","textblock2","textblock3","Checkout","App","basename","exact","path","component","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.024228cf.chunk.js","sourcesContent":["export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = await response.json();\n  return data;\n}\n\nexport async function getCategory(categoryId) {\n  const URL = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`;\n  const response = await fetch(URL);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getQuery(query) {\n  const URL = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n  const response = await fetch(URL);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const URL = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const response = await fetch(URL);\n  const data = await response.json();\n  return data;\n}\n","import React, { Component } from 'react';\n\nclass AddCartButton extends Component {\n  constructor(props) {\n    super(props);\n    this.addToCart = this.addToCart.bind(this);\n    this.checkQuantity = this.checkQuantity.bind(this);\n  }\n\n  addToCart() {\n    const { product, updateCart } = this.props;\n    if (!localStorage.getItem('cart')) {\n      localStorage.setItem('cart', JSON.stringify([product]));\n      return updateCart();\n    } if (this.checkQuantity()) {\n      const products = JSON.parse(localStorage.getItem('cart'));\n      localStorage.setItem('cart', JSON.stringify([...products, product]));\n      return updateCart();\n    }\n    return console.log('Sem estoque');\n  }\n\n  checkQuantity() {\n    const { product } = this.props;\n    const products = JSON.parse(localStorage.getItem('cart')).filter((i) => i.id === product.id);\n    const quantity = product.available_quantity;\n    return (products.length < quantity);\n  }\n\n  render() {\n    const { datatestid, buttonText } = this.props;\n    return (\n      <button type=\"button\" onClick={this.addToCart} data-testid={datatestid}>{buttonText}</button>\n    );\n  }\n}\n\nexport default AddCartButton;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './productcard.css';\nimport AddCartButton from '../AddCartButton';\n\nclass Card extends Component {\n  render() {\n    const { title, src, price, id, details, product, updateCart } = this.props;\n\n    return (\n      <div className=\"card\" data-testid=\"product\">\n        <img src={src} height=\"200px\" alt=\"thumbnail\" />\n        <div className=\"card-info\">\n          <p>{title}</p>\n          <span>{`R$${price}`}</span>\n          {(product.shipping.free_shipping) ?\n            <span data-testid=\"free-shipping\"><strong>Frete Grátis</strong></span> : null}\n        </div>\n        <div className=\"card-buttons\">\n          <Link\n            data-testid=\"product-detail-link\"\n            to={`/products/${id}`}\n            onClick={() => details(id)}\n          >\n            <button type=\"button\">Detalhes</button>\n          </Link>\n          <AddCartButton\n            product={product}\n            updateCart={updateCart}\n            datatestid=\"product-add-to-cart\"\n            buttonText=\"Adicionar ao Carrinho\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './productlist.css';\nimport ProductCard from '../ProductCard/ProductCard';\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.saveProduct = this.saveProduct.bind(this);\n  }\n\n  saveProduct(productId) {\n    const { productsList } = this.props;\n    const saveproduct = productsList.find((product) => productId === product.id);\n    localStorage.setItem('productDetails', JSON.stringify(saveproduct));\n  }\n\n  render() {\n    const { productsList, updateCart, cartSize } = this.props;\n    if (productsList.length > 0) {\n      return (\n        <div className=\"product-list\">\n          {productsList.map((card) => (\n            <ProductCard\n              title={card.title}\n              src={card.thumbnail}\n              price={card.price}\n              id={card.id}\n              key={card.id}\n              details={this.saveProduct}\n              product={card}\n              updateCart={updateCart}\n              cartSize={cartSize}\n            />\n          ))}\n        </div>\n      );\n    }\n    return (\n      <div data-testid=\"home-initial-message\" className=\"product-list\">\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </div>\n    );\n  }\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './shoppingcartsize.css';\n\n\nfunction ShoppingCartSize(props) {\n  const { cartSize } = props;\n  return (\n    <Link to=\"/shoppingcart\">\n      <button\n        type=\"button\"\n        className=\"cart\"\n        data-testid=\"shopping-cart-button\"\n      >\n        <p data-testid=\"shopping-cart-size\">{cartSize}</p>\n      </button>\n    </Link>\n  );\n}\n\nexport default ShoppingCartSize;\n","import React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport ProductList from '../../components/ProductList/ProductList';\nimport ShoppingCartSize from '../../components/ShoppingCartSize/ShoppingCartSize';\nimport './productlistpage.css';\n\nclass ProductListPage extends Component {\n  constructor(props) {\n    super(props);\n    const size = (JSON.parse(localStorage.getItem('cart')) === null ? '' : JSON.parse(localStorage.getItem('cart')).length);\n    this.state = {\n      categories: [],\n      query: '',\n      categoryID: '',\n      productsList: [],\n      cartSize: size,\n    };\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleQueryButton = this.handleQueryButton.bind(this);\n    this.updateCart = this.updateCart.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCategories().then((categories) => this.setState({ categories }));\n  }\n\n  updateCart() {\n    const size = JSON.parse(localStorage.getItem('cart')).length;\n    this.setState({ cartSize: size });\n  }\n\n  categoryList(id, name) {\n    return (\n      <div key={id}>\n        <input\n          type=\"radio\"\n          id={id}\n          value={id}\n          onClick={(e) => this.handleRadio(e)}\n          name=\"category\"\n          key={id}\n          data-testid=\"category\"\n        />\n        <label htmlFor={id}>{name}</label>\n      </div>\n    );\n  }\n\n\n  handleRadio(event) {\n    const { query } = this.state;\n    this.setState({ categoryID: event.target.value });\n    API.getProductsFromCategoryAndQuery(event.target.value, query)\n      .then((r) => this.setState({ productsList: r.results }));\n  }\n\n  handleQueryButton() {\n    const { query, categoryID } = this.state;\n    API.getProductsFromCategoryAndQuery(categoryID, query)\n      .then((r) => this.setState({ productsList: r.results }));\n  }\n\n  renderHeader() {\n    const { query, cartSize } = this.state;\n    return (\n      <div className=\"header\">\n        <input\n          type=\"text\"\n          data-testid=\"query-input\"\n          value={query}\n          onChange={(e) => this.setState({ query: e.target.value })}\n        />\n        <button type=\"button\" data-testid=\"query-button\" onClick={this.handleQueryButton}>\n          BUSCA\n        </button>\n        <ShoppingCartSize cartSize={cartSize} />\n      </div>\n    );\n  }\n\n  render() {\n    const { categories, productsList, cartSize } = this.state;\n    return (\n      <div className=\"container\">\n        {this.renderHeader()}\n        <div className=\"inner-container\">\n          <div className=\"categories-container\">\n            {categories.map(({ id, name }) => this.categoryList(id, name))}\n          </div>\n          <ProductList\n            productsList={productsList}\n            updateCart={this.updateCart}\n            cartSize={cartSize}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductListPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\n\nclass ReturnButton extends React.Component {\n  render() {\n    return <Link to=\"/\"><FontAwesomeIcon icon={faUndo} color=\"black\" /></Link>;\n  }\n}\n\nexport default ReturnButton;\n","import React, { Component } from 'react';\nimport ReturnButton from '../ReturnButton';\nimport AddCartButton from '../AddCartButton';\nimport '../../pages/ProductDetailsPage/productdetailspage.css';\n\nclass ProductDetails extends Component {\n  render() {\n    const { product, updateCart } = this.props;\n    return (\n      <div className=\"details\">\n        <div className=\"main-details\">\n          <h2 data-testid=\"product-detail-name\">{product.title}</h2>\n          <img src={product.thumbnail} alt=\"thumbnail\" />\n          <h3>{`R$${product.price}`}</h3>\n        </div>\n        <div className=\"attributes\">\n          {product.attributes.map((attribute) => <p key={attribute.id}>{`${attribute.name}: ${attribute.value_name}`}</p>)}\n        </div>\n        <div className=\"detail-buttons\">\n          <ReturnButton />\n          <AddCartButton\n            product={product}\n            updateCart={updateCart}\n            datatestid=\"product-detail-add-to-cart\"\n            buttonText=\"Adicionar ao Carrinho\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport ProductDetails from '../../components/ProductDetails/ProductDetails';\nimport ShoppingCartSize from '../../components/ShoppingCartSize/ShoppingCartSize';\nimport './productdetailspage.css';\n\nclass ProductDetailsPage extends Component {\n  constructor(props) {\n    super(props);\n    const size = (JSON.parse(localStorage.getItem('cart')) === null) ? '' : JSON.parse(localStorage.getItem('cart')).length;\n    this.state = {\n      product: {},\n      review: '',\n      cartSize: size,\n\n    };\n    this.updateState = this.updateState.bind(this);\n    this.updateCart = this.updateCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateState();\n  }\n\n  updateState() {\n    this.setState({ product: JSON.parse(localStorage.getItem('productDetails')) });\n  }\n\n  updateCart() {\n    this.setState({ cartSize: JSON.parse(localStorage.getItem('cart')).length });\n  }\n\n  render() {\n    const { product, review, cartSize } = this.state;\n    if (Object.keys(product).length > 0) {\n      return (\n        <div className=\"details-container\">\n          <ShoppingCartSize cartSize={cartSize} />\n          <ProductDetails product={product} updateCart={this.updateCart} />\n          <div className=\"review\">\n            <label htmlFor=\"user-review\"> Escreva sua avaliação do produto:</label>\n            <br />\n            <textarea\n              data-testid=\"product-detail-evaluation\"\n              id=\"user-review\"\n              value={review}\n              onChange={(e) => this.setState({ review: e.target.value })}\n            />\n            <button type=\"button\" onClick={() => this.setState({ review: '' })}>Enviar</button>\n          </div>\n        </div>\n      );\n    }\n    return <div>Teste</div>;\n  }\n}\n\nexport default ProductDetailsPage;\n","import React, { Component } from 'react';\n\nclass RemoveCartButton extends Component {\n  constructor(props) {\n    super(props);\n    this.removeFromCart = this.removeFromCart.bind(this);\n  }\n\n  removeFromCart() {\n    const { product, products, updateCart } = this.props;\n    const reverse1 = products.reverse();\n    const index = reverse1.findIndex((item) => item.id === product.id);\n    reverse1.splice(index, 1);\n    const reverse2 = reverse1.reverse();\n    localStorage.setItem('cart', JSON.stringify(reverse2));\n    return updateCart();\n  }\n\n\n  render() {\n    const { datatestid, buttonText } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={this.removeFromCart}\n        data-testid={datatestid}\n      >\n        {buttonText}\n      </button>\n    );\n  }\n}\n\nexport default RemoveCartButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport AddCartButton from '../../components/AddCartButton';\nimport RemoveCartButton from '../../components/RemoveCartButton';\nimport ShoppingCartSize from '../../components/ShoppingCartSize/ShoppingCartSize';\nimport ReturnButton from '../../components/ReturnButton';\nimport './shoppingcartpage.css';\n\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const cart = (JSON.parse(localStorage.getItem('cart')) === null ? '' : JSON.parse(localStorage.getItem('cart')));\n    this.state = { products: cart, cartSize: cart.length };\n    this.updateCart = this.updateCart.bind(this);\n  }\n\n  updateCart() {\n    const products = JSON.parse(localStorage.getItem('cart'));\n    this.setState({ products, cartSize: products.length });\n  }\n\n  quantityButtons(product, id) {\n    const { products } = this.state;\n    const quantity = products.filter((item) => item.id === id).length;\n    return (\n      <div className=\"flex_qtd_container\">\n        <RemoveCartButton\n          product={product}\n          products={products}\n          datatestid=\"product-decrease-quantity\"\n          updateCart={this.updateCart}\n          buttonText=\"-\"\n        />\n        <p className=\"input_qtd\" data-testid=\"shopping-cart-product-quantity\">{quantity}</p>\n        <AddCartButton\n          product={product}\n          datatestid=\"product-increase-quantity\"\n          updateCart={this.updateCart}\n          buttonText=\"+\"\n        />\n      </div>\n    );\n  }\n\n  removeAllItems(id) {\n    const { products } = this.state;\n    const removedItem = products.filter((product) => product.id !== id);\n    localStorage.setItem('cart', JSON.stringify(removedItem));\n    return this.updateCart();\n  }\n\n  createProductInfos(title, thumbnail, price, id, product) {\n    return (\n      <div key={id} className=\"flex_cart_container\">\n        <div className=\"align\">\n          <Button type=\"button\" onClick={() => this.removeAllItems(id)}>X</Button>\n        </div>\n        <div className=\"align, image_content\">\n          <img src={thumbnail} alt={`imagem de um ${title}`} />\n        </div>\n        <div className=\"title_content align\" data-testid=\"shopping-cart-product-name\">\n          {title}\n        </div>\n        <div className=\"align quantity_button\">\n          {this.quantityButtons(product, id)}\n        </div>\n        <div className=\"align\">\n          {`R$${price}`}\n        </div>\n      </div>\n    );\n  }\n\n  checkoutButton() {\n    this.value = 'Finalizar compra';\n    return (\n      <Link to=\"/checkout\">\n        <Button className=\"checkout_button\" type=\"button\" data-testid=\"checkout-products\">\n          Finalizar Compra\n        </Button>\n      </Link>\n    );\n  }\n\n  totalPrice() {\n    const { products } = this.state;\n    let totalPrice = products.reduce((acc, cur) => {\n      const { price } = cur;\n      return acc + price;\n    }, 0);\n    totalPrice = new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(totalPrice);\n    localStorage.setItem('totalPrice', totalPrice);\n    return (\n      <div>\n        <h2>\n          {`Valor total da compra: \n          ${totalPrice}`}\n        </h2>\n      </div>\n    );\n  }\n\n  filteredProducts() {\n    const { products, cartSize } = this.state;\n    const filteredProducts = products.reduce((acc, current) => {\n      const unique = acc.find((item) => item.id === current.id);\n      if (!unique) {\n        return [...acc, current];\n      }\n      return acc;\n    }, []);\n    return (\n      <div className=\"div_content\">\n        <ReturnButton />\n        <ShoppingCartSize cartSize={cartSize} />\n        <div className=\"div_container\">\n          <h2>Carrinho de compras: </h2>\n          {filteredProducts.map((product) => this.createProductInfos(\n            product.title,\n            product.thumbnail,\n            product.price,\n            product.id,\n            product))}\n        </div>\n        <div className=\"div_container\">\n          {this.totalPrice()}\n        </div>\n        {this.checkoutButton()}\n      </div>\n    );\n  }\n\n  render() {\n    const { products } = this.state;\n    if (products && (products.length !== 0)) return this.filteredProducts();\n    return (\n      <div>\n        <ReturnButton />\n        <div className=\"empty_content\" data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React from 'react';\n\nclass CheckoutItems extends React.Component {\n  constructor(props) {\n    super(props);\n    const cart = (JSON.parse(localStorage.getItem('cart')) === null ? '' : JSON.parse(localStorage.getItem('cart')));\n    this.state = { products: cart };\n  }\n  quantityButtons(product, id) {\n    const { products } = this.state;\n    const quantity = products.filter((item) => item.id === id).length;\n    return (\n      <p className=\"input_qtd\" data-testid=\"shopping-cart-product-quantity\">{quantity}</p>\n    );\n  }\n\n  createProductInfos(title, thumbnail, price, id, product) {\n    return (\n      <div key={id} className=\"flex_cart_container\">\n        <div className=\"align, image_content\">\n          <img src={thumbnail} alt={`imagem de ${title}`} />\n        </div>\n        <div className=\"title_content align\" data-testid=\"shopping-cart-product-name\">\n          {title}\n        </div>\n        <div className=\"align quantity_button\">\n          {this.quantityButtons(product, id)}\n        </div>\n        <div className=\"align\">\n          {`R$${price}`}\n        </div>\n      </div>\n    );\n  }\n\n  totalPrice() {\n    const { products } = this.state;\n    let totalPrices = products.reduce((acc, cur) => {\n      const { price } = cur;\n      return acc + price;\n    }, 0);\n    totalPrices = new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(totalPrices);\n    localStorage.setItem('totalPrice', totalPrices);\n    return (\n      <div>\n        <h2>\n          {`Valor total da compra: \n          ${totalPrices}`}\n        </h2>\n      </div>\n    );\n  }\n\n  filteredProducts() {\n    const { products } = this.state;\n    const filteredProducts = products.reduce((acc, inc) => {\n      const unique = acc.find((item) => item.id === inc.id);\n      if (!unique) {\n        return [...acc, inc];\n      }\n      return acc;\n    }, []);\n    return (\n      <div className=\"div_content\">\n        <div className=\"div_container\">\n          <p>Revise seus produtos</p>\n          {filteredProducts.map((product) => this.createProductInfos(\n            product.title,\n            product.thumbnail,\n            product.price,\n            product.id,\n            product))}\n        </div>\n        <div className=\"div_container\">\n          {this.totalPrice()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { products } = this.state;\n    if (products && (products.length !== 0)) return this.filteredProducts();\n    return (\n      <div>\n        <div className=\"empty_content\" data-testid=\"checkout-products\">\n          Seu carrinho está vazio\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckoutItems;\n","import React from 'react';\n\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: '',\n      CPF: '',\n      email: '',\n      phone: '',\n      CEP: '',\n      Address: '',\n      Complemento: '',\n      Number: '',\n      Cidade: '',\n      Estado: 'Estado',\n      checked: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.PayMethod = this.PayMethod.bind(this);\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({\n      ...this.state,\n      [event.target.name]: value,\n    });\n  }\n\n  handleRadio(event) {\n    this.setState({ checked: event.target.value });\n  }\n\n  handleSubmit(event) {\n    console.log(this);\n    event.preventDefault();\n  }\n\n  handleDropdown(event) {\n    const value = event.target.value;\n    this.setState({ Estado: value });\n  }\n\n  handleClick(event) {\n    if (this.state.Estado === 'Estado' || this.state.checked === false) event.preventDefault();\n  }\n\n  textblock1() {\n    return (\n      <div>\n        <input\n          type=\"text\" value={this.state.fullName} onChange={this.handleChange}\n          name=\"fullName\" placeholder=\"Nome Completo\" required=\"required\"\n          data-testid=\"checkout-fullname\"\n        />\n        <input\n          type=\"text\" value={this.state.CPF} onChange={this.handleChange}\n          name=\"CPF\" placeholder=\"CPF\" required=\"required\"\n          data-testid=\"checkout-cpf\"\n        />\n        <input\n          type=\"email\" value={this.state.email} required=\"required\"\n          onChange={this.handleChange} name=\"email\" placeholder=\"email\"\n          data-testid=\"checkout-email\"\n        />\n        <input\n          type=\"text\" value={this.state.phone} required=\"required\"\n          onChange={this.handleChange} name=\"phone\" placeholder=\"Telefone\"\n          data-testid=\"checkout-phone\"\n        />\n      </div>\n    );\n  }\n\n  textblock2() {\n    return (\n      <div>\n        <input\n          type=\"text\" value={this.state.CEP} required=\"required\"\n          onChange={this.handleChange} name=\"CEP\" placeholder=\"CEP\"\n          data-testid=\"checkout-cep\"\n        />\n        <input\n          type=\"text\" value={this.state.Address} required=\"required\"\n          onChange={this.handleChange} name=\"Address\" placeholder=\"Endereço\"\n          data-testid=\"checkout-address\"\n        />\n      </div>\n    );\n  }\n\n  textblock3() {\n    const Estados = ['Estado', 'AC', 'AP', 'AL', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MG', 'MS', 'MT',\n      'PA', 'PE', 'PI', 'PR', 'RJ', 'RN', 'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'];\n    return (\n      <div>\n        <input\n          type=\"text\" value={this.state.Complemento} required=\"required\"\n          onChange={this.handleChange} name=\"Complemento\" placeholder=\"Complemento\"\n        />\n        <input\n          type=\"text\" value={this.state.Number} required=\"required\"\n          onChange={this.handleChange} name=\"Number\" placeholder=\"Numero\"\n        />\n        <input\n          type=\"text\" value={this.state.Cidade} required=\"required\"\n          onChange={this.handleChange} name=\"Cidade\" placeholder=\"Cidade\"\n        />\n        <select required=\"required\" onChange={this.handleDropdown}>\n          {Estados.map((ele) =>\n            <option value={ele}>{ele}</option>)}\n        </select>\n      </div>\n    );\n  }\n\n  PayMethod() {\n    return (\n      <div>\n        <p>Método de Pagamento</p>\n        <label htmlFor=\"Boleto\"> Boleto\n          <input\n            type=\"radio\" value=\"Boleto\" checked={this.state.checked === 'Boleto'}\n            onChange={this.handleRadio}\n          />\n        </label>\n        <label htmlFor=\"Visa\"> Cartão de Crédito\n        <input\n          type=\"radio\" value=\"Visa\" checked={this.state.checked === 'Visa'}\n          onChange={this.handleRadio}\n        />Visa\n        <input\n          type=\"radio\" value=\"Mastercard\" checked={this.state.checked === 'Mastercard'}\n          onChange={this.handleRadio}\n        />Mastercard\n        <input\n          type=\"radio\" value=\"Elo\" checked={this.state.checked === 'Elo'}\n          onChange={this.handleRadio}\n        />Elo\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p>Informações do comprador</p>\n        {this.textblock1()}\n        {this.textblock2()}\n        {this.textblock3()}\n        {this.PayMethod()}\n        <input type=\"submit\" value=\"Comprar\" onClick={this.handleClick} />\n      </form>\n    );\n  }\n}\n\nexport default CheckoutForm;\n","import React from 'react';\nimport CheckoutItems from '../components/CheckoutItems';\nimport CheckoutForm from '../components/CheckoutForm';\nimport ReturnButtton from '../components/ReturnButton';\n\nclass Checkout extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <ReturnButtton />\n        <CheckoutItems />\n        <CheckoutForm />\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ProductList from './pages/ProductListPage/ProductListPage';\nimport ProductDetails from './pages/ProductDetailsPage/ProductDetailsPage';\nimport ShoppingCart from './pages/ShoppingCartPage/ShoppingCartPage';\nimport Checkout from './pages/CheckoutPage';\nimport NotFound from './pages/NotFoundPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <main>\n      <Router basename=\"/online-store\">\n        <Switch>\n          <Route exact path=\"/\" component={ProductList} />\n          <Route path=\"/products/:id\" component={ProductDetails} />\n          <Route path=\"/shoppingcart\" component={ShoppingCart} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}