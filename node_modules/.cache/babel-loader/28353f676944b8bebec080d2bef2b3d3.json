{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ShoppingCartPage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const products = JSON.parse(localStorage.getItem('cart'));\n    this.state = {\n      isShouldRedirect: false,\n      redirectPage: '',\n      productsArr: products\n    };\n    this.removeFromCart = this.removeFromCart.bind(this);\n    this.changeQuantity = this.changeQuantity.bind(this);\n    this.onChangeRedirect = this.onChangeRedirect.bind(this);\n  }\n\n  componentDidUpdate() {\n    const {\n      productsArr\n    } = this.state;\n    localStorage.setItem('cart', JSON.stringify(productsArr));\n\n    if (productsArr) {\n      const totalItems = productsArr.reduce((acc, cur) => {\n        const quantity = parseInt(cur.quantity, 10);\n        return acc + quantity;\n      }, 0);\n      localStorage.setItem('totalItems', totalItems);\n    }\n  }\n\n  onChangeRedirect(path) {\n    this.setState({\n      isShouldRedirect: true,\n      redirectPage: path\n    });\n  }\n\n  changeQuantity(value, id) {\n    const {\n      productsArr\n    } = this.state;\n    parseInt(id, 10);\n    const teste = productsArr.findIndex(product => product.id === id);\n    if (value === 'up') productsArr[teste].quantity += 1;else if (productsArr[teste].quantity > 1) productsArr[teste].quantity -= 1;\n    this.setState({\n      productsArr\n    });\n  }\n\n  createQtdButton(quantity, id) {\n    this.x = '-';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex_qtd_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button_content\",\n      type: \"button\",\n      onClick: () => this.changeQuantity('down', id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.x), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"input\",\n      className: \"input_qtd\",\n      value: quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button_content\",\n      type: \"button\",\n      onClick: () => this.changeQuantity('up', id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"+\"));\n  }\n\n  removeFromCart(event) {\n    const {\n      productsArr\n    } = this.state;\n    const {\n      id\n    } = event.target;\n    const item = productsArr.findIndex(product => product.id === id);\n    productsArr.splice(item, 1);\n    this.setState({\n      productsArr\n    });\n  }\n\n  createRemoveButton(id) {\n    this.x = 'x';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button_content\",\n      type: \"button\",\n      id: id,\n      onClick: this.removeFromCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.x));\n  }\n\n  createProductInfos(title, thumbnail, price, id, quantity) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: \"flex_cart_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, this.createRemoveButton(id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align, image_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnail,\n      alt: `imagem de um ${title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title_content align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align quantity_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, this.createQtdButton(quantity, id)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, price));\n  }\n\n  returnButton() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      label: \"return\",\n      type: \"button\",\n      onClick: () => this.onChangeRedirect('/'),\n      className: \"return-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  checkoutButton() {\n    this.value = 'Finalizar compra';\n    return /*#__PURE__*/React.createElement(Link, {\n      to: \"/checkout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"checkout_button\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, this.value));\n  }\n\n  totalPrice() {\n    const {\n      productsArr\n    } = this.state;\n    let totalPrice = productsArr.reduce((acc, cur) => {\n      const {\n        quantity,\n        realPrice\n      } = cur;\n      return acc + quantity * realPrice;\n    }, 0);\n    totalPrice = new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(totalPrice);\n    localStorage.setItem('totalPrice', totalPrice);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, `Valor total da compra: \n          ${totalPrice}`));\n  }\n\n  render() {\n    const {\n      history\n    } = this.props;\n    const {\n      productsArr,\n      isShouldRedirect,\n      redirectPage\n    } = this.state;\n    if (isShouldRedirect) history.push(redirectPage);\n\n    if (productsArr && productsArr.length !== 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"div_content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, this.returnButton(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"div_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, \"Carrinho de compras: \"), productsArr.map(({\n        title,\n        thumbnail,\n        price,\n        id,\n        quantity\n      }) => this.createProductInfos(title, thumbnail, price, id, quantity))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"div_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, this.totalPrice()), this.checkoutButton());\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, this.returnButton(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty_content\",\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, \"Seu carrinho est\\xE1 vazio!!\"));\n  }\n\n}\n\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ShoppingCartPage.js"],"names":["React","Link","ShoppingCart","Component","constructor","props","products","JSON","parse","localStorage","getItem","state","isShouldRedirect","redirectPage","productsArr","removeFromCart","bind","changeQuantity","onChangeRedirect","componentDidUpdate","setItem","stringify","totalItems","reduce","acc","cur","quantity","parseInt","path","setState","value","id","teste","findIndex","product","createQtdButton","x","event","target","item","splice","createRemoveButton","createProductInfos","title","thumbnail","price","returnButton","checkoutButton","totalPrice","realPrice","Intl","NumberFormat","style","currency","format","render","history","push","length","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const products = JSON.parse(localStorage.getItem('cart'));\n    this.state = {\n      isShouldRedirect: false,\n      redirectPage: '',\n      productsArr: products,\n    };\n    this.removeFromCart = this.removeFromCart.bind(this);\n    this.changeQuantity = this.changeQuantity.bind(this);\n    this.onChangeRedirect = this.onChangeRedirect.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { productsArr } = this.state;\n    localStorage.setItem('cart', JSON.stringify(productsArr));\n    if (productsArr) {\n      const totalItems = productsArr.reduce((acc, cur) => {\n        const quantity = parseInt((cur.quantity), 10);\n        return acc + quantity;\n      }, 0);\n      localStorage.setItem('totalItems', totalItems);\n    }\n  }\n\n  onChangeRedirect(path) {\n    this.setState({\n      isShouldRedirect: true,\n      redirectPage: path,\n    });\n  }\n\n  changeQuantity(value, id) {\n    const { productsArr } = this.state;\n    parseInt(id, 10);\n    const teste = productsArr.findIndex((product) => product.id === id);\n    if (value === 'up') productsArr[teste].quantity += 1;\n    else if (productsArr[teste].quantity > 1) productsArr[teste].quantity -= 1;\n    this.setState({ productsArr });\n  }\n\n  createQtdButton(quantity, id) {\n    this.x = '-';\n    return (\n      <div className=\"flex_qtd_container\">\n        <button\n          className=\"button_content\"\n          type=\"button\"\n          onClick={() => this.changeQuantity('down', id)}\n        >\n          {this.x}\n        </button>\n        <input type=\"input\" className=\"input_qtd\" value={quantity} />\n        <button\n          className=\"button_content\"\n          type=\"button\"\n          onClick={() => this.changeQuantity('up', id)}\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n\n  removeFromCart(event) {\n    const { productsArr } = this.state;\n    const { id } = event.target;\n    const item = productsArr.findIndex((product) => product.id === id);\n    productsArr.splice(item, 1);\n    this.setState({ productsArr });\n  }\n\n  createRemoveButton(id) {\n    this.x = 'x';\n    return (\n      <div>\n        <button\n          className=\"button_content\"\n          type=\"button\"\n          id={id}\n          onClick={this.removeFromCart}\n        >\n          {this.x}\n        </button>\n      </div>\n    );\n  }\n\n  createProductInfos(title, thumbnail, price, id, quantity) {\n    return (\n      <div key={id} className=\"flex_cart_container\">\n        <div className=\"align\">\n          {this.createRemoveButton(id)}\n        </div>\n        <div className=\"align, image_content\">\n          <img src={thumbnail} alt={`imagem de um ${title}`} />\n        </div>\n        <div className=\"title_content align\">\n          {title}\n        </div>\n        <div className=\"align quantity_button\">\n          {this.createQtdButton(quantity, id)}\n        </div>\n        <div className=\"align\">\n          {price}\n        </div>\n      </div>\n    );\n  }\n\n  returnButton() {\n    return (\n      <div>\n        <button\n          label=\"return\"\n          type=\"button\"\n          onClick={() => this.onChangeRedirect('/')}\n          className=\"return-button\"\n        />\n      </div>\n    );\n  }\n\n  checkoutButton() {\n    this.value = 'Finalizar compra';\n    return (\n      <Link to=\"/checkout\">\n        <button className=\"checkout_button\" type=\"button\">\n          {this.value}\n        </button>\n      </Link>\n    );\n  }\n\n  totalPrice() {\n    const { productsArr } = this.state;\n    let totalPrice = productsArr.reduce((acc, cur) => {\n      const { quantity, realPrice } = cur;\n      return acc + (quantity * realPrice);\n    }, 0);\n    totalPrice = new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(totalPrice);\n    localStorage.setItem('totalPrice', totalPrice);\n    return (\n      <div>\n        <h2>\n          {`Valor total da compra: \n          ${totalPrice}`}\n        </h2>\n      </div>\n    );\n  }\n\n  render() {\n    const { history } = this.props;\n    const { productsArr, isShouldRedirect, redirectPage } = this.state;\n    if (isShouldRedirect) history.push(redirectPage);\n    if (productsArr && (productsArr.length !== 0)) {\n      return (\n        <div className=\"div_content\">\n          {this.returnButton()}\n          <div className=\"div_container\">\n            <h2>Carrinho de compras: </h2>\n            {productsArr.map(({ title, thumbnail, price, id, quantity }) =>\n              this.createProductInfos(title, thumbnail, price, id, quantity))}\n          </div>\n          <div className=\"div_container\">\n            {this.totalPrice()}\n          </div>\n          {this.checkoutButton()}\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.returnButton()}\n        <div className=\"empty_content\" data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio!!\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}