{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/components/AddCartButton.js\";\nimport React, { Component } from 'react';\n\nclass AddCartButton extends Component {\n  constructor(props) {\n    super(props);\n    this.addToCart = this.addToCart.bind(this);\n    this.checkQuantity = this.checkQuantity.bind(this);\n  }\n\n  addToCart() {\n    const {\n      product,\n      updateCart\n    } = this.props;\n\n    if (!localStorage.getItem('cart')) {\n      localStorage.setItem('cart', JSON.stringify([product]));\n      return updateCart();\n    }\n\n    if (this.checkQuantity()) {\n      const products = JSON.parse(localStorage.getItem('cart'));\n      localStorage.setItem('cart', JSON.stringify([...products, product]));\n      return updateCart();\n    }\n\n    console.log('Estoque esgotado');\n  }\n\n  checkQuantity() {\n    const {\n      product\n    } = this.props;\n    const products = JSON.parse(localStorage.getItem('cart')).filter(i => i.id === product.id);\n    const quantity = product.available_quantity;\n    return products.length < quantity;\n  }\n\n  render() {\n    const {\n      datatestid,\n      buttonText\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.addToCart,\n      \"data-testid\": datatestid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n}\n\nexport default AddCartButton;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/components/AddCartButton.js"],"names":["React","Component","AddCartButton","constructor","props","addToCart","bind","checkQuantity","product","updateCart","localStorage","getItem","setItem","JSON","stringify","products","parse","console","log","filter","i","id","quantity","available_quantity","length","render","datatestid","buttonText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,UAAM;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA0B,KAAKL,KAArC;;AACA,QAAI,CAACM,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAL,EAAmC;AACjCD,MAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,CAACN,OAAD,CAAf,CAA7B;AACA,aAAOC,UAAU,EAAjB;AACD;;AAAC,QAAI,KAAKF,aAAL,EAAJ,EAA0B;AAC1B,YAAMQ,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAGC,QAAJ,EAAcP,OAAd,CAAf,CAA7B;AACA,aAAOC,UAAU,EAAjB;AACD;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAEDX,EAAAA,aAAa,GAAG;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACA,UAAMW,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCQ,MAAzC,CAAiDC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASb,OAAO,CAACa,EAAxE,CAAjB;AACA,UAAMC,QAAQ,GAAGd,OAAO,CAACe,kBAAzB;AACA,WAAQR,QAAQ,CAACS,MAAT,GAAkBF,QAA1B;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6B,KAAKvB,KAAxC;AACA,wBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKC,SAApC;AAA+C,qBAAaqB,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyEC,UAAzE,CADF;AAGD;;AAhCmC;;AAmCtC,eAAezB,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddCartButton extends Component {\n  constructor(props) {\n    super(props);\n    this.addToCart = this.addToCart.bind(this);\n    this.checkQuantity = this.checkQuantity.bind(this);\n  }\n\n  addToCart() {\n    const { product, updateCart } = this.props;\n    if (!localStorage.getItem('cart')) {\n      localStorage.setItem('cart', JSON.stringify([product]));\n      return updateCart();\n    } if (this.checkQuantity()) {\n      const products = JSON.parse(localStorage.getItem('cart'));\n      localStorage.setItem('cart', JSON.stringify([...products, product]));\n      return updateCart();\n    }\n    console.log('Estoque esgotado');\n  }\n\n  checkQuantity() {\n    const { product } = this.props;\n    const products = JSON.parse(localStorage.getItem('cart')).filter((i) => i.id === product.id);\n    const quantity = product.available_quantity;\n    return (products.length < quantity);\n  }\n\n  render() {\n    const { datatestid, buttonText } = this.props;\n    return (\n      <button type=\"button\" onClick={this.addToCart} data-testid={datatestid}>{buttonText}</button>\n    );\n  }\n}\n\nexport default AddCartButton;\n"]},"metadata":{},"sourceType":"module"}