{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ProductListPage/ProductListPage.js\";\nimport React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport ProductList from '../../components/ProductList';\nimport './productlistpage.css';\n\nclass ProductListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      query: '',\n      categoryID: '',\n      productsList: []\n    };\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleQueryButton = this.handleQueryButton.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCategories().then(categories => this.setState({\n      categories\n    }));\n  }\n\n  categoryList(id, name) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: id,\n      value: id,\n      onClick: e => this.handleRadio(e),\n      name: \"category\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      \"data-testid\": \"category\",\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, name));\n  }\n\n  handleRadio(event) {\n    const {\n      query\n    } = this.state;\n    const categoryID = event.target.value;\n    this.setState({\n      categoryID\n    });\n\n    if (query) {\n      API.getProductsFromCategoryAndQuery(categoryID, query).then(({\n        results\n      }) => this.setState({\n        productsList: results\n      }));\n    } else {\n      API.getCategory(categoryID).then(({\n        results\n      }) => this.setState({\n        productsList: results\n      }));\n    }\n  }\n\n  handleQueryButton() {\n    const {\n      productsList,\n      query,\n      categoryID\n    } = this.state;\n\n    if (productsList.length > 0) {\n      API.getProductsFromCategoryAndQuery(categoryID, query).then(({\n        results\n      }) => this.setState({\n        productsList: results\n      }));\n    } else {\n      API.getQuery(query).then(({\n        results\n      }) => this.setState({\n        productsList: results\n      }));\n    }\n  }\n\n  render() {\n    const {\n      categories,\n      query,\n      productsList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"query-input\",\n      value: query,\n      onChange: e => this.setState({\n        query: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.handleQueryButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"BUSCA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categories-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, categories.map(({\n      id,\n      name\n    }) => this.categoryList(id, name))), /*#__PURE__*/React.createElement(ProductList, {\n      productsList: productsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ProductListPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ProductListPage/ProductListPage.js"],"names":["React","Component","API","ProductList","ProductListPage","constructor","props","state","categories","query","categoryID","productsList","handleRadio","bind","handleQueryButton","componentDidMount","getCategories","then","setState","categoryList","id","name","e","event","target","value","getProductsFromCategoryAndQuery","results","getCategory","length","getQuery","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport ProductList from '../../components/ProductList';\nimport './productlistpage.css';\n\nclass ProductListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      query: '',\n      categoryID: '',\n      productsList: [],\n    };\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleQueryButton = this.handleQueryButton.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCategories().then((categories) => this.setState({ categories }));\n  }\n\n  categoryList(id, name) {\n    return (\n      <div key={id}>\n        <input\n          type=\"radio\"\n          id={id}\n          value={id}\n          onClick={(e) => this.handleRadio(e)}\n          name=\"category\"\n          key={id}\n        />\n        <label data-testid=\"category\" htmlFor={id}>{name}</label>\n      </div>\n    );\n  }\n\n  handleRadio(event) {\n    const { query } = this.state;\n    const categoryID = event.target.value;\n    this.setState({ categoryID });\n    if (query) {\n      API.getProductsFromCategoryAndQuery(categoryID, query)\n        .then(({ results }) => this.setState({ productsList: results }));\n    } else {\n      API.getCategory(categoryID).then(({ results }) => this.setState({ productsList: results }));\n    }\n  }\n\n  handleQueryButton() {\n    const { productsList, query, categoryID } = this.state;\n    if (productsList.length > 0) {\n      API.getProductsFromCategoryAndQuery(categoryID, query).then(({ results }) => this.setState({ productsList: results }));\n    } else {\n      API.getQuery(query).then(({ results }) => this.setState({ productsList: results }));\n    }\n  }\n\n\n  render() {\n    const { categories, query, productsList } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <input\n            type=\"text\"\n            data-testid=\"query-input\"\n            value={query}\n            onChange={(e) => this.setState({ query: e.target.value })}\n          />\n          <button type=\"button\" data-testid=\"query-button\" onClick={this.handleQueryButton}>\n            BUSCA\n          </button>\n        </div>\n        <div className=\"inner-container\">\n          <div className=\"categories-container\">\n            {categories.map(({ id, name }) => this.categoryList(id, name))}\n          </div>\n          <ProductList productsList={productsList} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductListPage;\n"]},"metadata":{},"sourceType":"module"}