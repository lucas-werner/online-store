{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ProductListPage/ProductListPage.js\";\nimport React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport ProductList from '../../components/ProductList';\nimport './productlistpage.css';\n\nclass ProductListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      query: '',\n      categoryID: '',\n      list: []\n    };\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleQueryButton = this.handleQueryButton.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCategories().then(categories => this.setState({\n      categories\n    }));\n  }\n\n  categoryList(id, name) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: id,\n      value: id,\n      onClick: e => this.handleRadio(e),\n      name: \"category\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      \"data-testid\": \"category\",\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, name));\n  }\n\n  handleRadio(event) {\n    const {\n      query\n    } = this.state;\n    this.setState({\n      categoryID: event.target.value\n    });\n\n    if (query) {\n      API.getQueryNCategory(event.target.value, query).then(r => this.setState({\n        list: r.results\n      }));\n    } else {\n      API.getCategory(event.target.value).then(r => this.setState({\n        list: r.results\n      }));\n    }\n  }\n\n  handleQueryButton() {\n    const {\n      list,\n      query,\n      categoryID\n    } = this.state;\n\n    if (list.length > 0) {\n      API.getQueryNCategory(categoryID, query).then(r => this.setState({\n        list: r.results\n      }));\n    } else {\n      API.getQuery(query).then(r => this.setState({\n        list: r.results\n      }));\n    }\n  }\n\n  render() {\n    const {\n      categories,\n      query,\n      list\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"query-input\",\n      value: query,\n      onChange: e => this.setState({\n        query: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.handleQueryButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"BUSCA\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categories-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, categories.map(category => this.categoryList(category.id, category.name))), /*#__PURE__*/React.createElement(ProductList, {\n      list: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ProductListPage;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-block15-project-frontend-online-store-11/src/pages/ProductListPage/ProductListPage.js"],"names":["React","Component","API","ProductList","ProductListPage","constructor","props","state","categories","query","categoryID","list","handleRadio","bind","handleQueryButton","componentDidMount","getCategories","then","setState","categoryList","id","name","e","event","target","value","getQueryNCategory","r","results","getCategory","length","getQuery","render","map","category"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport ProductList from '../../components/ProductList';\nimport './productlistpage.css';\n\nclass ProductListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n      query: '',\n      categoryID: '',\n      list: [],\n    };\n    this.handleRadio = this.handleRadio.bind(this);\n    this.handleQueryButton = this.handleQueryButton.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCategories().then((categories) => this.setState({ categories }));\n  }\n\n  categoryList(id, name) {\n    return (\n      <div key={id}>\n        <input\n          type=\"radio\"\n          id={id}\n          value={id}\n          onClick={(e) => this.handleRadio(e)}\n          name=\"category\"\n          key={id}\n        />\n        <label data-testid=\"category\" htmlFor={id}>{name}</label>\n      </div>\n    );\n  }\n\n  handleRadio(event) {\n    const { query } = this.state;\n    this.setState({ categoryID: event.target.value });\n    if (query) {\n      API.getQueryNCategory(event.target.value, query)\n        .then((r) => this.setState({ list: r.results }));\n    } else {\n      API.getCategory(event.target.value).then((r) => this.setState({ list: r.results }));\n    }\n  }\n\n  handleQueryButton() {\n    const { list, query, categoryID } = this.state;\n    if (list.length > 0) {\n      API.getQueryNCategory(categoryID, query).then((r) => this.setState({ list: r.results }));\n    } else {\n      API.getQuery(query).then((r) => this.setState({ list: r.results }));\n    }\n  }\n\n\n  render() {\n    const { categories, query, list } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <input\n            type=\"text\"\n            data-testid=\"query-input\"\n            value={query}\n            onChange={(e) => this.setState({ query: e.target.value })}\n          />\n          <button type=\"button\" data-testid=\"query-button\" onClick={this.handleQueryButton}>\n            BUSCA\n          </button>\n        </div>\n        <div className=\"inner-container\">\n          <div className=\"categories-container\">\n            {categories.map((category) => this.categoryList(category.id, category.name))}\n          </div>\n          <ProductList list={this.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductListPage;\n"]},"metadata":{},"sourceType":"module"}